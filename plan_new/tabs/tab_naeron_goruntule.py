# tabs/tab_naeron_goruntule.py
import pandas as pd
import sqlite3
import streamlit as st

def tab_naeron_goruntule(st):
    st.subheader("üóÇ Naeron Veritabanƒ±nƒ± G√∂r√ºnt√ºle, Filtrele, D√ºzelt, Sil")

    try:
        conn = sqlite3.connect("plan_new/naeron_kayitlari.db")
        df = pd.read_sql_query("SELECT rowid, * FROM naeron_ucuslar", conn)

        if df.empty:
            st.warning("Veritabanƒ±nda kayƒ±t bulunamadƒ±.")
            return

        # Filtre paneli
        with st.expander("üîç Filtrele"):
            col1, col2 = st.columns(2)
            with col1:
                ogretmen = st.multiselect("√ñƒüretmen Pilot", options=sorted(df["√ñƒüretmen Pilot"].dropna().unique().tolist()))
                ogrenci = st.multiselect("√ñƒürenci Pilot", options=sorted(df["√ñƒürenci Pilot"].dropna().unique().tolist()))
            with col2:
                gorev = st.multiselect("G√∂rev", options=sorted(df["G√∂rev"].dropna().unique().tolist()))
                tarih_araligi = st.date_input("U√ßu≈ü Tarihi Aralƒ±ƒüƒ±", [])

        df_filtered = df.copy()
        if ogretmen:
            df_filtered = df_filtered[df_filtered["√ñƒüretmen Pilot"].isin(ogretmen)]
        if ogrenci:
            df_filtered = df_filtered[df_filtered["√ñƒürenci Pilot"].isin(ogrenci)]
        if gorev:
            df_filtered = df_filtered[df_filtered["G√∂rev"].isin(gorev)]
        if len(tarih_araligi) == 2:
            df_filtered = df_filtered[
                (pd.to_datetime(df_filtered["U√ßu≈ü Tarihi 2"]) >= pd.to_datetime(tarih_araligi[0])) &
                (pd.to_datetime(df_filtered["U√ßu≈ü Tarihi 2"]) <= pd.to_datetime(tarih_araligi[1]))
            ]

        st.markdown("### üìã Filtrelenmi≈ü Kayƒ±tlar")
        st.dataframe(df_filtered.drop(columns=["rowid"]), use_container_width=True)

        # CSV indir
        csv = df_filtered.drop(columns=["rowid"]).to_csv(index=False).encode("utf-8")
        st.download_button("üì• CSV olarak indir", csv, file_name="naeron_filtreli.csv", mime="text/csv")


        # üîÑ Toplu D√ºzeltmeler
        with st.expander("üîÑ Toplu D√ºzeltmeler"):
            if st.button("G√∂rev s√ºtunundaki '*' i≈üaretlerini temizle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = REPLACE("G√∂rev", '*', '')
                    WHERE "G√∂rev" LIKE '%*%'
                """)
                conn.commit()
                st.success("‚úÖ G√∂rev s√ºtunundaki t√ºm '*' i≈üaretleri kaldƒ±rƒ±ldƒ±.")
                st.rerun()

            if st.button("√ñƒürenci Pilot '130AH - Ali HAMAL' olanlarƒ± g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "√ñƒürenci Pilot" = '130AH - Ali HAMAL'
                    WHERE "√ñƒürenci Pilot" = '130AH'
                """)
                conn.commit()
                st.success("‚úÖ '130NV' olan √∂ƒürenci pilotlar '130NV - Nisa Nur VARLI' olarak g√ºncellendi.")
                st.rerun()
            
            if st.button("G√∂rev 'SXC-12-C' ‚Üí 'SXC-12' olarak g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = 'SXC-12'
                    WHERE "G√∂rev" = 'SXC-12 (C)'
                """)
                conn.commit()
                st.success("‚úÖ 'SXC-12-C' olan t√ºm kayƒ±tlar 'SXC-12' olarak g√ºncellendi.")
                st.rerun()
 
            if st.button("G√∂rev 'SXC-10-C' ‚Üí 'SXC-10' olarak g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = 'SXC-10'
                    WHERE "G√∂rev" = 'SXC-10 (C)'
                """)
                conn.commit()
                st.success("‚úÖ 'SXC-10-C' ‚Üí 'SXC-10' tamamlandƒ±.")
                st.rerun()

            if st.button("G√∂rev 'SXC-11-C' ‚Üí 'SXC-11' olarak g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = 'SXC-11'
                    WHERE "G√∂rev" = 'SXC-11 (C)'
                """)
                conn.commit()
                st.success("‚úÖ 'SXC-11-C' ‚Üí 'SXC-11' tamamlandƒ±.")
                st.rerun()
            
            if st.button("G√∂rev 'E√êT. TKR.(SE)' ‚Üí 'EGT. TKR. (SE)' olarak g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = 'EGT. TKR. (SE)'
                    WHERE "G√∂rev" = 'E√êT. TKR.(SE)'
                """)
                conn.commit()
                st.success("‚úÖ 'E√êT. TKR.(SE)' ‚Üí 'EGT. TKR. (SE)' tamamlandƒ±.")
                st.rerun()

            if st.button("G√∂rev 'E-E√êT.TKR.(SE)' ‚Üí 'E-EGT.TKR.(SE)' olarak g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = 'E-EGT.TKR.(SE)'
                    WHERE "G√∂rev" = 'E-E√êT.TKR.(SE)'
                """)
                conn.commit()
                st.success("‚úÖ 'E-E√êT.TKR.(SE)' ‚Üí 'E-EGT.TKR.(SE)' tamamlandƒ±.")
                st.rerun()
            
            if st.button("G√∂rev 'EƒûT.TKR(SIM)' ‚Üí 'EGT.TKR(SIM)' olarak g√ºncelle"):
                cursor = conn.cursor()
                cursor.execute("""
                    UPDATE naeron_ucuslar
                    SET "G√∂rev" = 'EGT.TKR(SIM)'
                    WHERE "G√∂rev" = 'EƒûT.TKR(SIM)'
                """)
                conn.commit()
                st.success("‚úÖ 'EƒûT.TKR(SIM)' ‚Üí 'EGT.TKR(SIM)' tamamlandƒ±.")
                st.rerun()




        if st.button("üïí T√ºm saat s√ºtunlarƒ±nƒ± HH:MM formatƒ±na d√∂n√º≈üt√ºr"):
            cursor = conn.cursor()
            for col in ["Off Bl.", "On Bl.", "Block Time", "Flight Time"]:
                cursor.execute(f'''
                    UPDATE naeron_ucuslar
                    SET "{col}" = substr("{col}", 1, 5)
                    WHERE "{col}" LIKE '%:%'
                ''')
            conn.commit()
            st.success("‚úÖ T√ºm saat s√ºtunlarƒ± HH:MM formatƒ±na g√ºncellendi.")
            st.rerun()



        # üßæ U√ßu≈ü No'ya g√∂re se√ßim
        st.markdown("### ‚úèÔ∏è Kayƒ±t D√ºzelt / üóëÔ∏è Sil")
        secilen_ucus_no = st.selectbox("Bir kayƒ±t se√ßin (u√ßu≈ü no)", options=df_filtered["ucus_no"].tolist())

        if secilen_ucus_no:
            secilen_kayit = df[df["ucus_no"] == secilen_ucus_no].iloc[0]

            with st.form("kayit_duzenle_formu"):
                ucus_tarihi = st.date_input("U√ßu≈ü Tarihi", pd.to_datetime(secilen_kayit["U√ßu≈ü Tarihi 2"]))
                cagri = st.text_input("√áaƒürƒ±", secilen_kayit["√áaƒürƒ±"])
                offbl = st.text_input("Off Bl.", secilen_kayit["Off Bl."])
                onbl = st.text_input("On Bl.", secilen_kayit["On Bl."])
                block_time = st.text_input("Block Time", secilen_kayit["Block Time"])
                flight_time = st.text_input("Flight Time", secilen_kayit["Flight Time"])
                ogretmen = st.text_input("√ñƒüretmen Pilot", secilen_kayit["√ñƒüretmen Pilot"])
                ogrenci = st.text_input("√ñƒürenci Pilot", secilen_kayit["√ñƒürenci Pilot"])
                kalkis = st.text_input("Kalkƒ±≈ü", secilen_kayit["Kalkƒ±≈ü"])
                inis = st.text_input("ƒ∞ni≈ü", secilen_kayit["ƒ∞ni≈ü"])
                gorev = st.text_input("G√∂rev", secilen_kayit["G√∂rev"])
                engine = st.text_input("Engine", secilen_kayit["Engine"])
                ifr_suresi = st.text_input("IFR S√ºresi", secilen_kayit["IFR S√ºresi"])

                col1, col2 = st.columns(2)
                with col1:
                    guncelle = st.form_submit_button("üíæ Kaydƒ± G√ºncelle")
                with col2:
                    sil = st.form_submit_button("üóëÔ∏è Kaydƒ± Sil")

                if guncelle:
                    cursor = conn.cursor()
                    cursor.execute("""
                        UPDATE naeron_ucuslar SET
                            "U√ßu≈ü Tarihi 2" = ?, "√áaƒürƒ±" = ?, "Off Bl." = ?, "On Bl." = ?,
                            "Block Time" = ?, "Flight Time" = ?, "√ñƒüretmen Pilot" = ?, "√ñƒürenci Pilot" = ?,
                            "Kalkƒ±≈ü" = ?, "ƒ∞ni≈ü" = ?, "G√∂rev" = ?, "Engine" = ?, "IFR S√ºresi" = ?
                        WHERE ucus_no = ?
                    """, (
                        ucus_tarihi, cagri, offbl, onbl,
                        block_time, flight_time, ogretmen, ogrenci,
                        kalkis, inis, gorev, engine, ifr_suresi,
                        secilen_ucus_no
                    ))
                    conn.commit()
                    st.success("‚úÖ Kayƒ±t ba≈üarƒ±yla g√ºncellendi.")

                if sil:
                    cursor = conn.cursor()
                    cursor.execute("DELETE FROM naeron_ucuslar WHERE ucus_no = ?", (secilen_ucus_no,))
                    conn.commit()
                    st.warning("üóëÔ∏è Kayƒ±t silindi. L√ºtfen sayfayƒ± yenileyin.")

        conn.close()

    except Exception as e:
        st.error(f"‚ùå Hata olu≈ütu: {e}")
